@charset "UTF-8";
/*
1. 变量用$声明
2. 默认变量在值后面加上 !default 即可。
3. 在宏,函数,选择器外的声明为全局变量,局部变量在其内

*/
body {
  line-height: 2;
}

.block {
  color: #feacda;
}

em a {
  color: red;
}

span {
  color: #feacda;
}

/*---------------------------------------*/
/*
sass嵌套分为三种:
1. 选择器嵌套
2. 属性嵌套
3. 伪类嵌套
*/
/*选择器嵌套*/
.wrap {
  display: inline-block;
}
.wrap a {
  text-decoration: none;
}
.wrap a button {
  background: #ccc;
}

/*属性嵌套*/
.wrap {
  border-left: 1px solid #ff0;
  border-right: 2px dotted #eea;
  border-top-left-radius: 20px;
  border-top-right-radius: 30px;
  border-bottom-left-radius: 20px;
  border-bottom-right-radius: 30px;
}

/*伪类嵌套--经典CSS Clearfix*/
/* &代表自身(作用的参数) */
.clearfix:before, .clearfix:after {
  content: "";
  display: table;
}
.clearfix:after {
  clear: both;
  overflow: hidden;
}

/*
混合宏-声明混合宏
- 使用“@mixin”来声明一个混合宏,@include调用
- 混合宏支持不带参数,一个或者多个参数及默认参数
- 不管你用不用,都会生成写入的属性,一些参数建议用%来替代
*/
/*依次展示不带参数,一个参数,多个参数,默认参数的*/
.wrap1 {
  background: #fff;
}

.wrap2 {
  background-color: #feacda;
}

.wrap3 {
  background-color: #daecae;
  width: 500;
}

.wrap4 {
  width: 300px;
}

/*
extend--继承
与CSS的理念一致
*/
.btn, .btn-primary, .btn-second {
  border: 1px solid #ccc;
  padding: 6px 10px;
  font-size: 14px;
}

.btn-primary {
  background-color: #f36;
  color: #fff;
}

.btn-second {
  background-color: orange;
  color: #fff;
}

/*
 %placeholder 声明的代码，
 如果不被 @extend 调用的话，不会产生任何代码。
 减少代码冗余
 */
p {
  padding: 5px;
}
